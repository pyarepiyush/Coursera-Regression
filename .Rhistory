"95pctConfupper" = t.dose1_2$conf[2],
row.names      ="3) Dose 1 vs 2"
)
rbind(dose05_1.Ttest, dose05_2.Ttest,dose1_2.Ttest)
library(datasets)
data(mtcars)
head(mtcars)
mean(mpg)
mean(mtcars$mpg)
sd(mpg)
sd(mtcars$mpg)
n(mtcars$mpg)
pnorm(.05,mean=mean(mtcars$mpg),sd=sd(mtcars$mpg)/sqrt(32))
mean(mtcars$mpg)
sd(mtcars$mpg)/sqrt(32)
pnorm(.95,mean=mean(mtcars$mpg),sd=sd(mtcars$mpg)/sqrt(32))
qnorm(.05,mean=mean(mtcars$mpg),sd=sd(mtcars$mpg)/sqrt(32))
qnorm(.95,mean=mean(mtcars$mpg),sd=sd(mtcars$mpg)/sqrt(32))
mn <- mean(mtcars$mpg)
s <- sd(mtcars$mpg)
z <- qnorm(.05)
View(mtcars)
View(mtcars)
t.test(mpg~cyl,data=subset(mtcars,cyle %in% (4,6),var.equal=F)
t.test(mpg~cyl,data=subset(mtcars,cyle %in% (4,6)),var.equal=F)
t.test(mpg~cyl,data=subset(mtcars,cyle %in% c(4,6)),var.equal=F)
t.test(mpg~cyl,data=subset(mtcars,cyl %in% c(4,6)),var.equal=F)
qnorm(.975)
z_sd = qnorm(.975)*1.1/sqrt(100)
3-z_sd
3+z_sd
round(3+z_sd,2)
pbinom(54,prob=.5,size=100,lower.tail=F)
pbinom(54,prob=.5,size=100,lower.tail=F)
ppois(15800,lambda=520*30)
ppois(15800,lambda=520*30,lower.tail=F)
pnorm(-5/2)
4*sqrt(1/50)
-1/(4*sqrt(1/50) )
pnorm( -1/(4*sqrt(1/50) ))
pnorm( -1/(4*sqrt(1/50) )) *2
mu0=10
mua=11
sd=4
n=100
alpha=0.05
z=qnorm(1-alpha)
pnorm(mu0 + z * sd/sqrt(n), mean=mua, sd=sd/sqrt(n),lower.tail=F)
base = c(140,138,150,148,135)
test = c(132,135,151,146,130)
t.test(x=base, y=test, paired=T )
t.test(base, test, paired=T )
t.test(base, test, alternative = "two.sided", paired=T )
qt(.975)
qt(.975,8)
qt(.975,8)*(30/sqrt(9))
1100 - qt(.975,8)*(30/sqrt(9))
1100 + qt(.975,8)*(30/sqrt(9))
binom.test(x=3,n=4, alt="greater")
poisson.test(10 , T=100, 1/100 )
poisson.test(10 , T=100, 1/100, alt="less" )
poisson.test(10 , T=1787, 1/100, alt="less" )
df = ( ((Y_sd^2)/Y_n + (X_sd^2)/X_n)^2 ) / ( (((Y_sd^2)/Y_n )/(Y_n - 1))  + (((X_sd^2)/X_n )/(X_n - 1)) )
Y_bar = 1
X_bar = -3
Y_SD = 1.8
X_SD = 1.5
Y_n = 9
X_n = 9
df = ( ((Y_sd^2)/Y_n + (X_sd^2)/X_n)^2 ) / ( (((Y_sd^2)/Y_n )/(Y_n - 1))  + (((X_sd^2)/X_n )/(X_n - 1)) )
Y_sd = 1.8
X_sd = 1.5
df = ( ((Y_sd^2)/Y_n + (X_sd^2)/X_n)^2 ) / ( (((Y_sd^2)/Y_n )/(Y_n - 1))  + (((X_sd^2)/X_n )/(X_n - 1)) )
(Y_bar - X_bar) + c(1,-1) * pt(.975,df) * ( ((Y_sd^2)/Y_n + (X_sd^2)/X_n)^2 )
(Y_bar - X_bar) + c(1,-1) * qt(.975,df) * ( ((Y_sd^2)/Y_n + (X_sd^2)/X_n)^2 )
mu0 = 0
mua = -.01
sigma = .04
n = 16
alpha = .05
pnorm(mu0 + z * sigma/sqrt(n), mean = mua, sd = sigma/sqrt(n), lower.tail = F)
n = 100
z = qnorm(1 - alpha)
pnorm(mu0 + z * sigma/sqrt(n), mean = mua, sd = sigma/sqrt(n), lower.tail = F)
pnorm(mu0 + z * sigma/sqrt(n), mean = mua, sd = sigma/sqrt(n), lower.tail = T)
mu0 = 0
mua = .01
sigma = .04
n = 100
alpha = .05
z = qnorm(1 - alpha)
pnorm(mu0 + z * sigma/sqrt(n), mean = mua, sd = sigma/sqrt(n), lower.tail = T)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
w * (x - mean(x))^2
sum( w * (x - mean(x))^2 )
mean(x)
yy = function(avg){sum( w * (x - avg)^2 ) }
yy(3.86)
avg=mean(x)
sum( w * (x - avg)^2 )
yy(avg=3.86)
yy = function(avg,x,w){sum( w * (x - avg)^2 ) }
yy(3.86,x,w)
yy(3.86,x=x,w=w)
sum( w * (x - avg)^2 )
avg=mean(x)
sum( w * (x - 0.0025)^2 )
sum( w * (x - 0.0026)^2 )
sum( w * (x - 0.0027)^2 )
sum( w * (x - 0.0001)^2 )
sum( w * (x - 0.1)^2 )
sum( w * (x - 1)^2 )
sum( w * (x - .1)^2 )
sum( w * (x - .9)^2 )
sum( w * (x - .1471)^2 )
sum( w * (x - .16)^2 )
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x-1)
data(mtcars)
library(datasets)
data(mtcars)
view(mtcars)
View(mtcars)
lm(mpg~weight)
lm(mpg~wt)
lm(mpg~wt,data=mtcars)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
x[1]-mean(x)/sd(x)
x[1]
mean(x)
sd(x)
norm =x-mean(x)/sd(x)
norm
x
norm =(x-mean(x))/sd(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
coeff(lm(y~x))
coef(lm(y~x))
lm(y~x)
summary(lm(y~x))
0.7224/0.3107
pt(0.7224/0.3107,df=(length(x)-2),lower.tail=T)
pt(0.7224/0.3107,df=(length(x)-2),lower.tail=F)
library(datasets)
View(mtcars)
lm(mpg~ wt, data=mtcars)
summary(lm(mpg~ wt, data=mtcars))
fit = lm(mpg~ wt, data=mtcars)
summary(fit)
summary(fit)$coef
summfit = summary(fit)$coef
View(summfit)
View(summfit)
summfit[1,2] + c(1,-1) * qt(.975,df=fit$df) * summfit[2,2]
mean(mtcars$wt)
mean(mtcars$wt) * 0.7258
predict(fit,wt = mean(mtcars$wt) )
predict(fit,wt = 3.22 )
predict(fit,newvals=data.frame(3.22),interval="confidence" )
predict(fit,newdata=data.frame(3.22),interval="confidence" )
predict(fit,newdata=3.22,interval="confidence" )
predict(fit,newdata=data.frame(wt=3.22),interval="confidence" )
predict(fit,newdata=data.frame(wt=3.22),interval="prediction" )
predict(fit,newdata=data.frame(wt=3),interval="confidence" )
predict(fit,newdata=data.frame(wt=3),interval="prediction" )
summfit[1,2] + c(1,-1) * qt(.975,df=fit$df) * summfit[2,2]
summfit[1,2] + c(-1,1) * qt(.975,df=fit$df) * summfit[2,2]
2*0.7357907
fit2 = lm(mpg~ I(wt/2), data=mtcars)
summfit2 = summary(fit2)$coef
summfit2
summfit2[1,2] + c(-1,1) * qt(.975,df=fit2$df) * summfit2[2,2]
summfit2[2,1] + c(-1,1) * qt(.975,df=fit2$df) * summfit2[2,2]
summary(lm(mpg~1,data=mtcars)
)
3.046/6.027
(847.73)/(847.73 + 278.32)
summary(fit)
residual(fit)
residual(summary(fit))
resid(summary(fit))
resid(fit)
sum(resid(fit))
sum(resid(fit)^2)
sum(resid(fit2)^2)
fit1 = lm(mpg~ 1, data=mtcars)
summary(fit1)
sum(resid(fit1)^2)
sum(resid(fit)^2)/sum(resid(fit1)^2)
require(datasets)
data(swiss)
?swiss
mcat1 = mcat[cyl %in% c(4,8),]
mtcars1 = mtcars[cyl %in% c(4,8),]
mtcars1 = mtcars[mtcars$cyl %in% c(4,8),]
View(mtcars1)
lm(mpg~wt+factor(cyl), data=mtcars1)
summary( lm(mpg~wt+factor(cyl), data=mtcars1) )
mtcars$cyl = relevel(mtcars1$cyl,reg=8)
mtcars$cyl = relevel(factor(mtcars1$cyl),reg=8)
mtcars$cyl = relevel(factor(mtcars1$cyl),ref=8)
mtcars1$cyl = factor(mtcars1$cyl)
mtcars$cyl = relevel(mtcars1$cyl,ref=8)
mtcars$cyl = relevel(mtcars1$cyl,ref="8")
mtcars1$cyl = relevel(mtcars1$cyl,ref="8")
View(mtcars1)
summary( lm(mpg~wt+factor(cyl), data=mtcars1) )
mtcars1$cyl = factor(mtcars1$cyl)
summary( lm(mpg~wt+factor(cyl), data=mtcars1) )
summary( lm(mpg~factor(cyl), data=mtcars1) )
mtcars1 = mtcars[mtcars$cyl %in% c(4,8),]
mtcars1$cyl = factor(mtcars1$cyl)
summary( lm(mpg~wt+factor(cyl), data=mtcars1) )
summary( lm(mpg~factor(cyl), data=mtcars1) )
summary( lm(mpg~wt+factor(cyl), data=mtcars) )$coef
summary( lm(mpg~wt+factor(cyl)+I(wt*factor(cyl)) , data=mtcars) )$coef
summary( lm(mpg~I(wt*factor(cyl)) , data=mtcars) )$coef
summary( lm(mpg~wt*factor(cyl) , data=mtcars) )$coef
fit3a =  lm(mpg~wt+factor(cyl), data=mtcars)
fit3b =  lm(mpg~wt*factor(cyl) , data=mtcars)
anova(fit3a,fit3b)
summary( lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars) )
View(mtcars)
View(mtcars)
fit3a =  lm(mpg~wt+factor(cyl), data=mtcars)
summary(fit3a)
summary(fit3b)
summary( lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars) )
summary( lm(mpg ~ wt + factor(cyl), data = mtcars) )
3.2056*.5
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit5 = lm(y~x)
hatvalues(fit5)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit6=lm(y~x)
dfbetas(fit6)
hatvalues(fit6)
?mtcars
fit.cp = lm(mpg~.,mtcars)
summary(fit.cp)
summary(mtcars)
fit.cp = lm(mpg ~ factor(am), data=mtcars )
summary(fit.cp)
fit.cp1 = lm(mpg ~ factor(am), data=mtcars )
fit.cp2 = lm(mpg ~ wt+factor(am), data=mtcars )
summary(fit.cp2)
fit.cp3 = lm(mpg ~ drat+factor(am), data=mtcars )
summary(fit.cp3)
fit.cp3 = lm(mpg ~ wt*factor(am), data=mtcars )
summary(fit.cp3)
fit.cp4 = lm(mpg ~ factor(drat)*factor(am), data=mtcars )
summary(fit.cp4)
fit.cp4 = lm(mpg ~ factor(drat)+factor(am), data=mtcars )
summary(fit.cp4)
fit.cp4 = lm(mpg ~ drat+factor(am), data=mtcars )
summary(fit.cp4)
fit.cp5 = lm(mpg ~ factor(gear)+factor(am), data=mtcars )
summary(fit.cp5)
fit.cp5 = lm(mpg ~ factor(gear)*factor(am), data=mtcars )
summary(fit.cp5)
fit.cp6 = lm(mpg ~ hp+factor(am), data=mtcars )
summary(fit.cp6)
ggplot(mtcars, aes(x=hp, y=mpg)) +
geom_point(shape=1)      # Use hollow circles
library(ggplot2)
ggplot(mtcars, aes(x=hp, y=mpg)) +
geom_point(shape=1)      # Use hollow circles
ggplot(mtcars, aes(x=hp, y=mpg, color=am)) +
geom_point(shape=1)      # Use hollow circles
ggplot(mtcars, aes(x=hp, y=mpg, color=am)) +
geom_point(shape=1, size=1)      # Use hollow circles
ggplot(mtcars, aes(x=hp, y=mpg, color=am)) +
geom_point(shape=2, size=5)      # Use hollow circles
ggplot(mtcars, aes(x=hp, y=mpg, color=am)) +
geom_point(shape=3, size=5)      # Use hollow circles
ggplot(mtcars, aes(x=hp, y=mpg, color=am)) +
geom_point(shape=4, size=5)      # Use hollow circles
ggplot(mtcars, aes(x=hp, y=mpg, color=am)) +
geom_point(shape=5, size=5)      # Use hollow circles
ggplot(mtcars, aes(x=hp, y=mpg, color=am)) +
geom_point(shape=6, size=5)      # Use hollow circles
ggplot(mtcars, aes(x=hp, y=mpg, color=am)) +
geom_point(shape=16, size=5)      # Use hollow circles
ggplot(mtcars, aes(x=hp, y=mpg, color=am)) +
geom_point(shape=16, size=3)      # Use hollow circles
ggplot(mtcars, aes(x=hp, y=mpg, color=am)) +
geom_point(shape=16, size=5)      # Use hollow circles
g = ggplot(mtcars, aes(x=hp, y=mpg, color=am)) +
geom_point(shape=16, size=5)      # Use hollow circles
summary(fit.cp6)
fit.cp7 = lm(mpg ~ hp*factor(am), data=mtcars )
summary(fit.cp7)
fit.cp8 = lm(mpg ~ factor(cyl)+factor(am), data=mtcars )
summary(fit.cp8)
fit.cp9 = lm(mpg ~ factor(cyl)*factor(am), data=mtcars )
summary(fit.cp9)
fit.cp10 = lm(mpg ~ disp+factor(am), data=mtcars )
summary(fit.cp10)
fit.cp11 = lm(mpg ~ disp*factor(am), data=mtcars )
summary(fit.cp11)
g.disp = ggplot(mtcars, aes(x=disp, y=mpg, color=am)) +
geom_point(shape=16, size=5)      # Use hollow circles
g.disp
g.wt = ggplot(mtcars, aes(x=wt, y=mpg, color=am)) +
geom_point(shape=16, size=5)      # Use hollow circles
g.wt
g.hp
g.hp = ggplot(mtcars, aes(x=hp, y=mpg, color=am)) +
geom_point(shape=16, size=5)      # Use hollow circles
g.hp
g.qsec = ggplot(mtcars, aes(x=qsec, y=mpg, color=am)) +
geom_point(shape=16, size=5)      # Use hollow circles
g.qsec
fit.cp12 = lm(mpg ~ qsec*factor(am), data=mtcars )
summary(fit.cp12)
fit.cp12 = lm(mpg ~ qsec+factor(am), data=mtcars )
summary(fit.cp12)
summary(fit.cp10)
summary(fit.cp11)
fit.all = lm(mpg~ factor(am)+ qsec + hp + wt + wt * factor(am), data=mtcars)
summary(fit.all)
fit.all = lm(mpg~ qsec + hp + wt + wt * factor(am), data=mtcars)
summary(fit.all)
fit.all = lm(mpg~ qsec +  wt + wt * factor(am), data=mtcars)
summary(fit.all)
fit.all1 = lm(mpg~ qsec +  wt + wt * factor(am) + disp * factor(am), data=mtcars)
summary(fit.all1)
fit.all1 = lm(mpg~ qsec +  wt + wt * factor(am) + disp * factor(am), data=mtcars)
summary(fit.all1)
smmary(fit.cp3($coef)
smmary(fit.cp3)$coef
summary(fit.cp3)$coef
fit.cp3$coef
g.wt+ geom_abline(intercept=fit.cp3$coef[1], slope=fit.cp3$coef[2], size=2,col="red")
g.wt+ geom_abline(intercept=fit.cp3$coef[1]+fit.cp3$coef[3], slope=fit.cp3$coef[2]+fit.cp3$coef[4], size=2)
g.wt1 =  g.wt+ geom_abline(intercept=fit.cp3$coef[1], slope=fit.cp3$coef[2], size=2,col="red")
g.wt1=   g.wt1+ geom_abline(intercept=fit.cp3$coef[1]+fit.cp3$coef[3], slope=fit.cp3$coef[2]+fit.cp3$coef[4], size=2)
g.wt1
plot(fit.all)
library(leaps)
install.packages("leaps")
library("leaps", lib.loc="C:/Program Files/R/R-3.2.1/library")
library(leaps)
leaps<-regsubsets(mpg~.,data=mtcars,nbest=10)
summary(leaps)
plot(leaps,scale="r2")
library(car)
install.packages("car")
subsets(leaps, statistic="rsq")
plot(leaps,scale="rss")
plot(leaps,scale="adjr2")
library(MASS)
fit.all <- lm(mpg~.,data=mtcars)
step <- stepAIC(fit.all, direction="both")
step$anova # display results
pair(mtcars)
pairs(mtcars)
plot(fit.all, panel=panel.smooth)
pairs(mtcars, panel=panel.smooth)
g.wt
p <- ggplot(mtcars, aes(x=factor(am), y=mpg))
p + geom_violin(aes(fill = factor(m)))
p + geom_violin(aes(fill = factor(am)))
p + geom_boxplot(aes(fill = factor(am)))
g.wt1 =  g.wt+ geom_abline(intercept=fit.cp3$coef[1], slope=fit.cp3$coef[2], size=2,col="red")
g.wt1=   g.wt1+ geom_abline(intercept=fit.cp3$coef[1]+fit.cp3$coef[3], slope=fit.cp3$coef[2]+fit.cp3$coef[4], size=2)
g.wt1
g.wt1 =  g.wt+ geom_abline(intercept=fit.cp3$coef[1], slope=fit.cp3$coef[2], size=2,col="darkblue")
g.wt1=   g.wt1+ geom_abline(intercept=fit.cp3$coef[1]+fit.cp3$coef[3], slope=fit.cp3$coef[2]+fit.cp3$coef[4], size=2)
g.wt1
g.wt1 =  g.wt+ geom_abline(intercept=fit.cp3$coef[1], slope=fit.cp3$coef[2], size=2,col="darkblue")
g.wt1=   g.wt1+ geom_abline(intercept=fit.cp3$coef[1]+fit.cp3$coef[3], slope=fit.cp3$coef[2]+fit.cp3$coef[4], size=2,col="lightblue")
g.wt1
g.wt1 =  g.wt+ geom_abline(intercept=fit.cp3$coef[1], slope=fit.cp3$coef[2], size=2,col="darkblue")
g.wt1=   g.wt1+ geom_abline(intercept=fit.cp3$coef[1]+fit.cp3$coef[3], slope=fit.cp3$coef[2]+fit.cp3$coef[4], size=2,col="blue1")
g.wt1
g.wt1 =  g.wt+ geom_abline(intercept=fit.cp3$coef[1], slope=fit.cp3$coef[2], size=2,col="darkblue")
g.wt1=   g.wt1+ geom_abline(intercept=fit.cp3$coef[1]+fit.cp3$coef[3], slope=fit.cp3$coef[2]+fit.cp3$coef[4], size=2,col="blue2")
g.wt1
g.wt1 =  g.wt+ geom_abline(intercept=fit.cp3$coef[1], slope=fit.cp3$coef[2], size=2,col="darkblue")
g.wt1=   g.wt1+ geom_abline(intercept=fit.cp3$coef[1]+fit.cp3$coef[3], slope=fit.cp3$coef[2]+fit.cp3$coef[4], size=2,col="blue3")
g.wt1
g.wt1 =  g.wt+ geom_abline(intercept=fit.cp3$coef[1], slope=fit.cp3$coef[2], size=2,col="red1")
g.wt1=   g.wt1+ geom_abline(intercept=fit.cp3$coef[1]+fit.cp3$coef[3], slope=fit.cp3$coef[2]+fit.cp3$coef[4], size=2,col="blue3")
g.wt1
g.wt1 =  g.wt+ geom_abline(intercept=fit.cp3$coef[1], slope=fit.cp3$coef[2], size=2,col="red3")
g.wt1=   g.wt1+ geom_abline(intercept=fit.cp3$coef[1]+fit.cp3$coef[3], slope=fit.cp3$coef[2]+fit.cp3$coef[4], size=2,col="blue3")
g.wt1
fit.cp3$coef[1]
fit.cp3$coef[1]+fit.cp3$coef[3]
p <- ggplot(mtcars, aes(x=factor(am), y=mpg))
p + geom_boxplot(aes(fill = factor(am)))
p
p <- ggplot(mtcars, aes(x=factor(am), y=mpg))
p + geom_boxplot(aes(fill = factor(am)))
fit.all <- lm(mpg~.,data=mtcars)
summary(fit.all)$coef
summary(fit.all)
sumfit.all = summary(fit.all)
names(sumfit.all)
sumfit.all$coefficients
sumfit.all$res
sumfit.all$sigma
sumfit.all$sigma
sumfit.all$coefficients
library(knitr)
knit('001-minimal.Rmd')
library(knitr)
knit('001-minimal.Rmd')
demo(knitr)
names(step)
step$model
names(step)
step.anova=step$anova # display results
attr(step.anova)
attr(step.anova,1)
attr(step.anova,"heading")
summary(step.anova)
attr(step.anova,"heading")[3]
attr(step.anova,"heading")[4]
attr(step.anova,"heading")[5]
attr(step.anova,"heading")[5]
step.anova=step$anova # display results
step <- stepAIC(fit.all, direction="both")
step <- stepAIC(fit.all, direction="both")
fit.all1 <- lm(mpg~wt + qsec + am,data=mtcars)
sumfit.all1 = summary(fit.all1)
sumfit.all1$coef
sumfit.all$sigma
sumfit.all1$sigma
mtcars1$Transmission = ifelse(mtcars$am==1, "manual","automatic")
g.wt = ggplot(mtcars, aes(x=wt, y=mpg, color=factor(am)) ) +
geom_point(shape=16, size=5)
g.wt1 =  g.wt+ geom_abline(intercept=fit.cp3$coef[1], slope=fit.cp3$coef[2], size=2,col="red3")
g.wt1=   g.wt1+ geom_abline(intercept=fit.cp3$coef[1]+fit.cp3$coef[3], slope=fit.cp3$coef[2]+fit.cp3$coef[4], size=2,col="blue3")
g.wt1 scale_fill_discrete(name="Transmission",
breaks=c(0,1),
labels=c("Automatic", "Manual"))
# Check the interaction effect of weight and am on mpg
# Lighter vehicle tend to have higher mpg. Does this explain some variance between the mpg of automatic vs. manual transmissions?
g.wt = ggplot(mtcars, aes(x=wt, y=mpg, color=factor(am)) ) +
geom_point(shape=16, size=5)
g.wt1 =  g.wt+ geom_abline(intercept=fit.cp3$coef[1], slope=fit.cp3$coef[2], size=2,col="red3")
g.wt1=   g.wt1+ geom_abline(intercept=fit.cp3$coef[1]+fit.cp3$coef[3], slope=fit.cp3$coef[2]+fit.cp3$coef[4], size=2,col="blue3")
g.wt1 scale_fill_discrete(name="Transmission", breaks=c(0,1), labels=c("Automatic", "Manual"))
# Check the interaction effect of weight and am on mpg
# Lighter vehicle tend to have higher mpg. Does this explain some variance between the mpg of automatic vs. manual transmissions?
g.wt = ggplot(mtcars, aes(x=wt, y=mpg, color=factor(am)) ) +
geom_point(shape=16, size=5)
g.wt1 =  g.wt+ geom_abline(intercept=fit.cp3$coef[1], slope=fit.cp3$coef[2], size=2,col="red3")
g.wt1=   g.wt1+ geom_abline(intercept=fit.cp3$coef[1]+fit.cp3$coef[3], slope=fit.cp3$coef[2]+fit.cp3$coef[4], size=2,col="blue3")
g.wt1 + scale_fill_discrete(name="Transmission", breaks=c(0,1), labels=c("Automatic", "Manual"))
# Check the interaction effect of weight and am on mpg
# Lighter vehicle tend to have higher mpg. Does this explain some variance between the mpg of automatic vs. manual transmissions?
g.wt = ggplot(mtcars, aes(x=wt, y=mpg, color=factor(am)) ) +
geom_point(shape=16, size=5)
g.wt + scale_fill_discrete(name="Transmission", breaks=c(0,1), labels=c("Automatic", "Manual"))
g.wt1 =  g.wt+ geom_abline(intercept=fit.cp3$coef[1], slope=fit.cp3$coef[2], size=2,col="red3")
g.wt1=   g.wt1+ geom_abline(intercept=fit.cp3$coef[1]+fit.cp3$coef[3], slope=fit.cp3$coef[2]+fit.cp3$coef[4], size=2,col="blue3")
g.wt1
# Check the interaction effect of weight and am on mpg
# Lighter vehicle tend to have higher mpg. Does this explain some variance between the mpg of automatic vs. manual transmissions?
g.wt = ggplot(mtcars, aes(x=wt, y=mpg, color=factor(am)) ) +
geom_point(shape=16, size=5)
g.wt + scale_fill_discrete(name="Transmission", breaks=c(0,1), labels=c("Automatic", "Manual"))
g.wt1 =  g.wt+ geom_abline(intercept=fit.cp3$coef[1], slope=fit.cp3$coef[2], size=2,col="red3")
g.wt1=   g.wt1+ geom_abline(intercept=fit.cp3$coef[1]+fit.cp3$coef[3], slope=fit.cp3$coef[2]+fit.cp3$coef[4], size=2,col="blue3")
g.wt1
mtcars1=mtcars
mtcars1$Transmission = ifelse(mtcars1$am==1,"Manual","Automatic")
g.wt = ggplot(mtcars1, aes(x=wt, y=mpg, color=Transmission ) +
geom_point(shape=16, size=5)
g.wt + scale_fill_discrete(name="Transmission", breaks=c(0,1), labels=c("Automatic", "Manual"))
g.wt1 =  g.wt+ geom_abline(intercept=fit.cp3$coef[1], slope=fit.cp3$coef[2], size=2,col="red3")
g.wt1=   g.wt1+ geom_abline(intercept=fit.cp3$coef[1]+fit.cp3$coef[3], slope=fit.cp3$coef[2]+fit.cp3$coef[4], size=2,col="blue3")
g.wt1
mtcars1$Transmission = ifelse(mtcars1$am==1,"Manual","Automatic")
g.wt = ggplot(mtcars1, aes(x=wt, y=mpg, color=Transmission )) +   geom_point(shape=16, size=5)
g.wt + scale_fill_discrete(name="Transmission", breaks=c(0,1), labels=c("Automatic", "Manual"))
g.wt1 =  g.wt+ geom_abline(intercept=fit.cp3$coef[1], slope=fit.cp3$coef[2], size=2,col="red3")
g.wt1=   g.wt1+ geom_abline(intercept=fit.cp3$coef[1]+fit.cp3$coef[3], slope=fit.cp3$coef[2]+fit.cp3$coef[4], size=2,col="blue3")
g.wt1
g.wt + scale_fill_discrete(name="Transmission", breaks=c(0,1), labels=c("Automatic", "Manual"))
# Without displacement
fit.final = lm(mpg~ qsec +  wt + wt * factor(am), data=mtcars)
summary(fit.final)
library(rmarkdown)
setwd("~/study topics/coursera/Regression")
render("Course Project.Rmd") # you could also use "Untitled.md"
?pandoc
system("pandoc -h")
devtools::install_github("rstudio/rmarkdown")
rmarkdown::render('Course Project.Rmd',
output_format=pdf_document(latex_engine='xelatex')
)
fit.final = lm(mpg~ qsec +  wt * factor(am), data=mtcars)
summary(fit.final)
fit.final.summ= summary(fit.final)
fit.final.summ$call
sumfit.al
sumfit.all
sumfit.all$call
